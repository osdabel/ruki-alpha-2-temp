
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AngketScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  q1: 'q1',
  q2: 'q2',
  q3: 'q3',
  q4: 'q4',
  q5: 'q5',
  q6: 'q6',
  q7: 'q7',
  q8: 'q8',
  q9: 'q9',
  q10: 'q10',
  q11: 'q11',
  q12: 'q12',
  q13: 'q13',
  q14: 'q14',
  q15: 'q15',
  q16: 'q16',
  q17: 'q17',
  q18: 'q18',
  q19: 'q19',
  q20: 'q20',
  q21: 'q21',
  q22: 'q22',
  q23: 'q23',
  q24: 'q24',
  q25: 'q25',
  q26: 'q26',
  q27: 'q27',
  q28: 'q28',
  q29: 'q29',
  q30: 'q30',
  q31: 'q31',
  q32: 'q32',
  q33: 'q33',
  q34: 'q34'
};

exports.Prisma.AngketxiScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  q1: 'q1',
  q2: 'q2',
  q3: 'q3',
  q4: 'q4',
  q5: 'q5',
  q6: 'q6',
  q7: 'q7',
  q8: 'q8',
  q9: 'q9',
  q10: 'q10',
  q11: 'q11',
  q12: 'q12',
  q13: 'q13',
  q14: 'q14',
  q15: 'q15',
  q16: 'q16',
  q17: 'q17',
  q18: 'q18',
  q19: 'q19',
  q20: 'q20',
  q21: 'q21',
  q22: 'q22',
  q23: 'q23',
  q24: 'q24',
  q25: 'q25',
  q26: 'q26',
  q27: 'q27',
  q28: 'q28',
  q29: 'q29',
  q30: 'q30',
  q31: 'q31',
  q32: 'q32',
  q33: 'q33',
  q34: 'q34'
};

exports.Prisma.AngketxiiScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  q1: 'q1',
  q2: 'q2',
  q3: 'q3',
  q4: 'q4',
  q5: 'q5',
  q6: 'q6',
  q7: 'q7',
  q8: 'q8',
  q9: 'q9',
  q10: 'q10',
  q11: 'q11',
  q12: 'q12',
  q13: 'q13',
  q14: 'q14',
  q15: 'q15',
  q16: 'q16',
  q17: 'q17',
  q18: 'q18',
  q19: 'q19',
  q20: 'q20',
  q21: 'q21',
  q22: 'q22',
  q23: 'q23',
  q24: 'q24',
  q25: 'q25',
  q26: 'q26',
  q27: 'q27',
  q28: 'q28',
  q29: 'q29',
  q30: 'q30',
  q31: 'q31',
  q32: 'q32',
  q33: 'q33',
  q34: 'q34'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};


exports.Prisma.ModelName = {
  Angket: 'Angket',
  Angketxi: 'Angketxi',
  Angketxii: 'Angketxii'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
